[ ] - notification
[ ] - Profile
[ ] - Calendar
[ ] - Custom colors / Login 


// var MailListener = require("mail-listener2");

// var mailListener = new MailListener({
//     username: "williamb@plastrela.com.br",
//     password: "wb1015$$",
//     host: "imap.plastrela.com.br",
//     port: 993,
//     tls: true,
//     // debug: console.log, // Or your custom function with only one incoming argument. Default: null 
//     tlsOptions: { rejectUnauthorized: false },
//     mailbox: "INBOX", // mailbox to monitor 
//     // searchFilter: ["UNSEEN", "FLAGGED"], // the search filter being used after an IDLE notification has been retrieved 
//     markSeen: true, // all fetched email willbe marked as seen and not fetched next time 
//     fetchUnreadOnStart: true, // use it only if you want to get all unread email on lib start. Default is `false`, 
//     mailParserOptions: { streamAttachments: true }, // options to be passed to mailParser lib. 
//     attachments: false, // download attachments as they are encountered to the project directory 
//     attachmentOptions: { directory: "attachments/" } // specify a download directory for attachments 
// });

// mailListener.start(); // start listening 

// // stop listening 
// //mailListener.stop(); 

// mailListener.on("server:connected", function () {
//     console.log("imapConnected");
// });

// mailListener.on("server:disconnected", function () {
//     console.log("imapDisconnected");
// });

// mailListener.on("error", function (err) {
//     console.log(err);
// });

// mailListener.on("mail", function (mail, seqno, attributes) {
//     // do something with mail object including attachments 
//     for (var k in mail) {
//         // console.log(k);
//     }
//     console.log("emailParsed", mail.attachments);
//     // mail processing code goes here 
// });

// mailListener.on("attachment", function (attachment) {
//     console.log(attachment.path);
// });

WITH RECURSIVE tree AS
(SELECT id, idcategoriapai, descricao
FROM fin_categoria
WHERE idcategoriapai IS NULL
UNION ALL
SELECT c.id,c.idcategoriapai, trim(tree.descricao) || ' - ' || c.descricao as descricao
FROM fin_categoria c
	INNER JOIN tree
	ON (tree.id = c.idcategoriapai)
)
SELECT *
FROM tree order by 3
